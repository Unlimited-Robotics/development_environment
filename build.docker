#!/usr/bin/python3
import subprocess
import argparse

from robotdevenv.component import RobotDevComponent as Component
from robotdevenv.robot import RobotDevRobot as Robot
from robotdevenv.docker import RobotDevDockerHandler as DockerHandler


class RobotDevBuildDockerError(Exception): pass


def build_component():

    parser = argparse.ArgumentParser()
    robot = Robot(parser)
    component = Component(parser, robot)
    docker_handler = DockerHandler(component, robot)

    print()
    print('🤖🤖 UR ROBOT DEVELOPMENT ENVIRONMENT 🤖🤖')
    print('  🦾 Build docker images 🦿')
    print()
    print(f'📦📦  Component: {component.full_name}')
    print(f'🤖🤖      Robot: {robot.name}')
    print
    print(f'🛠️  Building component image: \'{component.image_dev_name}\'')
    print(f'            from dockerfile: \'{component.dockerfile_path}\'')
    print()

    parser.add_argument('-p', '--prod', action='store_true')
    args = dict(parser.parse_known_args()[0]._get_kwargs())

    if args['prod']:
        docker_handler.build_prod_image()
    else:
        docker_handler.build_dev_image()


if __name__ == "__main__":
    build_component()
