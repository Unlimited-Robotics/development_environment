#!/usr/bin/python3
import argparse

from robotdevenv.component import RobotDevComponent as Component
from robotdevenv.robot import RobotDevRobot as Robot


class RobotDevRunError(Exception): pass


def run_command():

    parser = argparse.ArgumentParser()
    robot = Robot(parser)
    component = Component(parser, robot)

    print()
    print('ðŸ¤–ðŸ¤– UR ROBOT DEVELOPMENT ENVIRONMENT ðŸ¤–ðŸ¤–')
    print(f'  ðŸ¦¾ Run command ðŸ¦¿')
    print()
    print(f'ðŸ“¦ðŸ“¦  Component: {component.full_name}')
    print(f'ðŸ¤–ðŸ¤–      Robot: {robot.name}')
    print()

    # check_workspace(config, only_warning=True)

    parser.add_argument('-d', '--detach', action='store_true')
    args = dict(parser.parse_known_args()[0]._get_kwargs())
    arg_detach = args['detach']

    command_args = parser.parse_known_args()[1]
    if command_args:
        command = ' '.join(command_args)
    else:
        command = ''

    if command:
        print(f'ðŸ¦¿  Command to run: \'{command}\'')
        print()

    volumes = component.get_volumes()

    for volume in volumes:
        print(volume)

    # run_command_inside_container(
    #         env=env,
    #         config=config, 
    #         component=component, 
    #         command=command,
    #         volumes=volumes,
    #         interactive=not arg_detach,
    #         detached_mode=arg_detach,
    #         ignore_command_error=True,
    #     )


if __name__ == "__main__":
    run_command()
